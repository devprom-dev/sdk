<?php
return array(
    "requirements/list" => "<strong>Реестр требований</strong> позволяет работать с требованиями вне зависимости от их расположения в различных документах. <strong>Группируйте</strong> требования по типам, тэгам, состояниям и другим атрибутам. Выполняйте <strong>массовые операции</strong> сразу над несколькими требованиями.</p><p>Чтобы увидеть <strong>полный текст</strong> требований включите отображение столбца \"Содержание\" в настройках списка.</p><p>Используйте&nbsp;<strong>трассировку требований</strong>&nbsp;для получения ответов на вопросы:<ul>	<li>все ли необходимые системные требования запланированы в работу;</li>	<li>в какой версии и как реализуются системные требования;</li>	<li>как проверяются требования тестировщиками;</li>	<li>каким образом документируются требования.</li></ul><ul></ul>",
    "requirements/docs" => "<strong>Документы требований</strong> позволяют объединить требования в целостный набор, полный и непротиворечивый, сгруппировать требования по источнику, типам (бизнес- или системные) и другим критериям (безопасность, юзабилити и т.п.). При помощи документов требования удобно <strong>согласовывать</strong> с заказчиком и <strong>рецензировать</strong> в команде.</p><p>Для начала <strong>импортируйте</strong> ваши существующие документы в Devprom.</p><p>Сохраняйте документы как <strong>шаблоны</strong>, для быстрого создания типовых документов. Вы можете отредактировать шаблоны документов в модуле:&nbsp;%module:requirements/doctemplates%.",
    "dicts-requirementtype" => "Вы можете <strong>группировать</strong> требования по типу. Для разных типов требований можно определить свой <strong>шаблон по умолчанию</strong>, например, для <strong>системных</strong> требований это будет вариант использования, а для <strong>бизнес-требований</strong> - пользовательская история.</p><p>Для разных <strong>типов требований</strong> можно создать свой набор <strong>пользовательских атрибутов</strong>.",
    "dicts-reqsattribute" => "<strong>Пользовательские атрибуты</strong> позволяют дополнить модель данных важной для вас информацией, например \"Источник\", \"Важность\", \"Оценка\" и т.п.</p><p>Атрибуты с типом \"Справочник\" или \"Ссылка\" позволяют <strong>группировать</strong> и <strong>фильтровать</strong> данные по значениям атрибута в списках и на досках.</p><p>Если вы хотите использовать настроенные атрибуты в нескольких проектах, то сохраните проект в <strong>шаблон</strong> и используйте его для создания новых проектов.</p><p>Больше информации вы найдете в <a href=\"http://devprom.ru/docs/%D0%9F%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%B8%D0%B5-%D0%B0%D1%82%D1%80%D0%B8%D0%B1%D1%83%D1%82%D1%8B\">руководстве пользователя</a>.",
    "requirements/templates" => "<strong>Шаблоны </strong>позволяют сократить время на разработку <strong>требований</strong>, обмениваться знаниями внутри команды, <strong>повысить качество</strong> разрабатываемых требований и <strong>стандартизовать</strong> оформление требований в проекте или по всей компании.<br />Укажите шаблон <strong>по умолчанию</strong>, тогда он будет использоваться при создании требований. Для каждого <strong>типа требований</strong> можно определить свой шаблон по умолчанию.",
    "requirementsmatrix" => "<strong>Матрица трассируемости</strong> применима практически на всех этапах процесса разработки и позволяет:</p><ul>	<li>Контролировать <strong>целостность</strong> разрабатываемого продукта, выявлять расхождения между тем, что требуется и тем, что реализуется.</li>	<li>Существенно сократить время на <strong>анализ изменений</strong>, последующих за появлением новой доработки.</li>	<li>Поддерживать артефакты в актуальном состоянии.</li></ul><p>С точки зрения <strong>управления потребностями</strong> мы:</p><ul>	<li>хотим понять, как именно были учтены исходные пожелания, когда они будут реализованы;</li>	<li>хотим проверить, учли ли мы все важные пожелания в очередной версии бизнес-требований или версии продукта.</li></ul><p>С точки зрения <strong>бизнес</strong>- и <strong>системного анализа </strong>мы:<ul>	<li>хотим понять, откуда появилось бизнес-требование, какая у него важность;</li>	<li>хотим понять, как будут реализованы бизнес-требования путем изучения системных требований;</li>	<li>хотим проверить, все ли необходимые бизнес-требования отражены в системных требованиях.</li></ul>",
    "reqslineschanged" => "На графике отображается количество добавленных,&nbsp;измененных и удаленных <strong>строк текста требований</strong> за каждый день проекта. Текст требований содержится как в пожеланиях, так и в документах требований. Используйте отчет для анализа <strong>объема изменений</strong> в требованиях, для выявления фазы сбора требований и проектирования,&nbsp;для сравнения продуктивности аналитиков.",
    "reqscoveredbytestdoc" => "Используйте отчет для контроля за полнотой <strong>покрытия требований</strong> тестовой документацией. Низкий процент покрытия требований говорит о том, что многие требования не проверяются тестировщиками.",
    "requirementseffort" => "Используйте отчет для просмотра оценки <strong>трудоемкости реализации</strong> требований и времени, <strong>фактически затраченного</strong> на реализацию, для анализа отклонений между плановыми и фактическими трудозатратами по требованиям.</p><p>Оценка затраченного&nbsp;времени рассчитывается на основе реализованных доработок, трудозатрат по задачам и трудозатрат по дочерним&nbsp;требованиям.",
    "requirements/doctemplates" => "<strong>Шаблоны документов</strong> предназначены для создания документов на основе типовой структуры и содержания, например, для подготовки&nbsp;спецификаций, технических заданий, архитектурных описаний и других видов документов с определенной структурой.</p><p>Для <strong>создания</strong> шаблона необходимо открыть документ и в действиях выбрать пункт \"Сохранить как шаблон\".",
    "requirementcreateissuewebmethod" => "Реализация требований - это постановка задачи разработчикам, тестировщикам и тех. писателям, выраженная в форме доработок (инкрементов продукта), которые необходимо выполнить, чтобы реализовать требования. После выполнения&nbsp;доработок, требование автоматически изменит статус на \"Реализовано\".",
    "requirementsdevchart" => "Показывает текущий статус работы над требованиями, в виде процентного отношения количества требований, находящихся на различных этапах разработки и реализации.",
    "requirementsleftchart" => "Показывает количество требований, которые осталось реализовать, в виде соотношения по их важности. Команда должна быть сфокусирована на реализации обязательных требований, затем важных и только в последнюю очередь - желательных.",
    "requirementsimportancechart" => "Показывает ход работы над требованиями в разрезе их важности. Команда должна быть сфокусирована на реализации обязательных требований, затем важных и только в последнюю очередь - желательных.",
    "requirementsversions" => "<strong>Версии</strong> и <strong>бейзлайны</strong> позволяют фиксировать содержимое документов требований от релиза к релизу, чтобы затем легко <strong>просмотреть изменения</strong>, запланировать необходимые доработки, обновить тестовую и справочную документацию. Список версий можно редактировать в модуле: %module:snapshots-reqs%",
    "projectburnup:scrum" => "Используйте график для оценки <strong>количества спринтов</strong>, необходимых для завершения проекта:</p><ul>	<li><strong><span style=\"color:#FF0000;\">Красная линия</span></strong> отображает суммарную оценку трудоемкостей всех незавершенных историй в проекте.</li>	<li><strong><span style=\"color:#008000;\">Зеленая линия</span></strong> показывает трудоемкость историй в уже завершенных спринтах.</li>	<li><strong><span style=\"color:#0000FF;\">Синяя линия</span></strong> отображает трудоемкость историй, которые должны быть выполнены (\"сожжены\") в будущих спринтах, с учетом текущей скорости команды.</li></ul><p>Таким образом, пересечение синей и красной линий указывает на количество спринтов, которые еще осталось выполнить, чтобы реализовать оставшиеся истории проекта.",
    "scrum/meetings" => "Если участникам вашей команды не удается собраться вместе в одно время, чтобы рассказать о планах и текущих проблемах, то оставьте эту информацию здесь. Каждый участник команды может рассказать о ходе работ над своими задачами, а также озвучить сложности, с которыми он сталкивается. Совместными усилиями участники команды должны устранять возникающие сложности и двигаться к успешному завершению спринта.<br />&nbsp;",
    "iterationplanningboard" => "Целью груминга является подготовка качественного бэклога для будущих спринтов. В результате груминга команда получает понятные элементы бэклога, которые можно оценить и реализовать в течение одного спринта.</p><p>Наиболее важные элементы бэклога планируются в ближайший спринт, остальные распределяются по будущим спринтам согласно приоритету, технологическим зависимостям и т.д.",
    "dicts-pmcustomattribute" => "<strong>Пользовательские атрибуты</strong> позволяют дополнить модель данных важной для вас информацией. Для заявок это может быть \"Департамент\", для требований - \"Источник\" и т.п.</p><p>Атрибуты с типом \"Справочник\" или \"Ссылка\" позволяют <strong>группировать</strong> и <strong>фильтровать</strong> данные по значениям атрибута в списках и на досках.</p><p>Если вы хотите использовать настроенные атрибуты в нескольких проектах, то сохраните проект в <strong>шаблон</strong> и используйте его для создания новых проектов.</p><p>Больше информации вы найдете в <a href=\"http://devprom.ru/docs/%D0%9F%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%B8%D0%B5-%D0%B0%D1%82%D1%80%D0%B8%D0%B1%D1%83%D1%82%D1%8B\">руководстве пользователя</a>.",
    "releaseplanningboard" => "Сформируйте <strong>план реализации</strong> элементов бэклога, с учетом сроков релизов и оценок трудоемкости. Наиболее важные элементы бэклога планируются в <strong>ближайший релиз</strong>, остальные распределяются по <strong>будущим релизам</strong> согласно приоритету, технологическим зависимостям и т.д.",
    "tasksplanningboard" => "Управляйте <strong>оперативным планом</strong> работ, контролируя загрузку исполнителей и объем работ, запланированный в итерациях. Эффективно перераспределяйте задачи между итерациями и исполнителями.",
    "project-plan-hierarchy" => "На плане работ отображаются интервалы времени, в рамках которых необходимо выполнить заданный объем работы. Релизы - это длительные интервалы времени, один или несколько месяцев, спринты (итерации) - более короткие интервалы времени, обычно от недели до месяца.</p><p>Вехи - это внешние или просто важные даты, которые необходимо учитывать в работе. Вехи помогают команде выполнить работу к важной дате и не пропустить этот срок. Даты вех обычно не совпадают с датами релизов или итераций.",
    "milestoneform" => "<strong>Вехи</strong> - это внешние или просто важные даты, которые необходимо учитывать в работе. Вехи помогают команде выполнить работу к важной дате и не пропустить этот срок. Даты вех обычно не совпадают с датами релизов или итераций.",
    "iterationform" => "Для отображения итераций на календаре и для просмотра прошедших итераций, откройте модуль %module:project-plan-hierarchy%",
    "releaseform" => "Для отображения релизов на календаре и для просмотра прошедших релизов, откройте модуль %module:project-plan-hierarchy%",
    "fileserver/folders" => "<strong>Каталоги</strong> позволяют сгруппировать файлы по назначению. Файлы могут выкладывать участники проекта для <strong>обмена данными</strong>, полученными из внешних источников, для передачи <strong>результатов работы</strong> и т.п.",
    "ee/projectlinks" => "Связь между проектами позволяет настроить <strong>видимость данных</strong> одного проекта, при работе в другом проекте. Проект выступает в роли <strong>программы</strong> или <strong>подпроекта</strong>. Вы можете настроить какие данные будут экспортироваться (станут видимы) из одного проекта в другой.</p><p>Например, на уровне программы может определяться <strong>общий план</strong> проекта (сроки релизов), который будет использоваться во всех проектах программы.</p><p>Или можно экспортировать пожелания (или задачи) из проекта в программу, обеспечив тем самым <strong>прозрачность работ</strong> по всей программе и <strong>синхронизацию команд</strong>.</p><p>О других возможных вариантах вы можете узнать в <a href=\"http://devprom.ru/features/%D0%9A%D0%BE%D0%BE%D1%80%D0%B4%D0%B8%D0%BD%D0%B0%D1%86%D0%B8%D1%8F-%D0%B2%D1%81%D0%B5%D1%85-%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9-%D0%BF%D0%BE-%D0%BA%D0%BE%D0%BC%D0%BF%D0%B0%D0%BD%D0%B8%D0%B8\">каталоге решений</a> на платформе Devprom.ALM",
    "dicts-texttemplate" => "Шаблоны текстов позволяют быстро создавать артефакты на основе типовых текстов, добавлять стандартные ответы в комментариях, унифицировать формат документирования требований и тестовой документации.",
    "dicts-projectrole" => "<strong>Проектные роли</strong> позволяют разграничить доступ участников проекта к различным артефактам и действиям в системе.</p><p>При настройке жизненных циклов (состояний) для пожеланий, задач и т.п. можно <strong>ограничить доступ</strong> на переход из одного состояния в другое конкретным проектным ролям.</p><p>Каждая проектная роль связана с базовой ролью, что позволяет строить отчеты о <strong>загрузке</strong> и <strong>доступности ресурсов</strong> по всей компании.</p><p>Проектные роли могут быть связаны с <strong>типами задач</strong>, что позволяет системе автоматически подбирать исполнителей для задач заданного типа.",
    "dicts-requesttype" => "Для разных типов пожеланий можно создать свой набор <strong>пользовательских атрибутов</strong>.</p><p>При настройке жизненного цикла (состояний) пожеланий можно <strong>настроить переходы</strong> для каждого типа пожелания.",
    "workflow-taskstate" => "<strong>Жизненный цикл</strong> (или Workflow) задач описывается набором <strong>состояний</strong> и <strong>переходами</strong> между ними. Жизненный цикл описывает <strong>процесс работы</strong> с задачами в проекте. Для переходов можно определять правила и ограничения, а для состояний - системные действия, выполняемые автоматически при перемещении задачи в конкретное состояние.</p><p>Для каждого состояния можно <strong>настроить поля</strong>, которые будут отображаться на форме или будут обязательны к заполнению, при нахождении задачи в этом состоянии.</p><p><strong>Цвет</strong> заданный для состояния используется для окрашивания карточек на <strong>досках</strong>, а также для отображения состояния в <strong>списках</strong>.",
    "workflow-issuestate" => "<strong>Жизненный цикл</strong> (или Workflow) пожеланий описывается набором <strong>состояний</strong> и <strong>переходами</strong> между ними. Жизненный цикл описывает <strong>процесс работы</strong> с пожеланиями в проекте. Для переходов можно определять правила и ограничения, а для состояний - системные действия, выполняемые автоматически при перемещении пожелания в конкретное состояние.</p><p>Для каждого состояния можно <strong>настроить поля</strong>, которые будут отображаться на форме или будут обязательны к заполнению, при нахождении пожелания в этом состоянии.</p><p><strong>Цвет</strong> заданный для состояния используется для окрашивания карточек на <strong>досках</strong>, а также для отображения состояния в <strong>списках</strong>.",
    "workflow-questionstate" => "<strong>Жизненный цикл</strong> (или Workflow) вопросов описывается набором <strong>состояний</strong> и <strong>переходами</strong> между ними. Жизненный цикл описывает <strong>процесс работы</strong> с вопросами в проекте. Для переходов можно определять правила и ограничения.",
    "workflow-requirementstate" => "<strong>Жизненный цикл</strong> (или Workflow) требований описывается набором <strong>состояний</strong> и <strong>переходами</strong> между ними. Жизненный цикл описывает <strong>процесс работы</strong> с требованиями в проекте, например, <strong>согласование</strong> требований с заказчиком и <strong>рецензирование</strong> в команде. Для переходов можно определять правила и ограничения, а для состояний - системные действия, выполняемые автоматически при изменении состояния требования.</p><p>Для каждого состояния можно <strong>настроить поля</strong>, которые будут отображаться на форме или будут обязательны к заполнению, при перемещении требования в это состояние.</p><p><strong>Цвет</strong> заданный для состояния используется для отображения состояния в <strong>списках</strong> и <strong>документах</strong>.",
    "workflow-testingstate" => "<strong>Жизненный цикл</strong> (или Workflow) тестовых сценариев описывается набором <strong>состояний</strong> и <strong>переходами</strong> между ними. Жизненный цикл описывает <strong>процесс работы</strong> с тестовой документацией в проекте. Для переходов можно определять правила и ограничения, а для состояний - системные действия, выполняемые автоматически при изменении состояния тестового сценария.</p><p>Для каждого состояния можно <strong>настроить поля</strong>, которые будут отображаться на форме или будут обязательны к заполнению, при перемещении тестового сценария в это состояние.</p><p><strong>Цвет</strong> заданный для состояния используется для отображения состояния в <strong>списках</strong> и <strong>тест-планах</strong>.",
    "workflow-helpstate" => "<strong>Жизненный цикл</strong> (или Workflow) разделов технических документов описывается набором <strong>состояний</strong> и <strong>переходами</strong> между ними. Жизненный цикл описывает <strong>процесс работы</strong> с технической документацией в проекте. Для переходов можно определять правила и ограничения, а для состояний - системные действия, выполняемые автоматически при изменении состояния.</p><p>Для каждого состояния можно <strong>настроить поля</strong>, которые будут отображаться на форме или будут обязательны к заполнению, при перемещении раздела в это состояние.</p><p><strong>Цвет</strong> заданный для состояния используется для отображения состояния в <strong>списках</strong> и <strong>документах</strong>.",
    "operations/builds" => "<strong>Сборка</strong> представляет собой скомпилированный компонент или продукт.&nbsp;Новую сборку можно зарегистрировать вручную, например, перед началом ее <strong>тестирования</strong>.</p><p>Если вы используете инструменты для <strong>автоматического выпуска</strong> сборок, то настройте автоматическую регистрацию новой сборки при помощи REST API:</p><div style=\"background:#eee;border:1px solid #ccc;padding:5px 10px;\"><p><strong>Linux</strong></p><p>curl -X POST -H \"Devprom-Auth-Key: &lt;auth-key&gt;\" -H \"Content-Type:application/json\" %host%/pm/%project%/api/v1/builds -d \"{\\\"Caption\\\":\\\"$BUILD_NUMBER\\\",\\\"Description\\\":\\\"\\\",\\\"BuildRevision\\\":{\\\"Version\\\":\\\"$SVN_REVISION\\\"},\\\"State\\\":\\\"inprogress\\\"}\"</p></div><div style=\"background:#eee;border:1px solid #ccc;padding:5px 10px;\"><p><strong>Windows</strong></p><p>set /p APP_VERSION=&lt;version.txt<br />set BUILD_JSON={\\\"Caption\\\":\\\"%APP_VERSION%\\\",\\\"Description\\\":\\\"\\\",\\\"BuildRevision\\\":{\\\"Version\\\":\\\"%SVN_REVISION%\\\"},\\\"State\\\":\\\"inprogress\\\"}<br />set BUILD_URL= %host%/pm/%project%/api/v1/builds<br />curl -X POST -H \"Devprom-Auth-Key: &lt;auth-key&gt;\"&nbsp;-H \"Content-Type:application/json\" %BUILD_URL% -d \"%BUILD_JSON%\"</p></div><p>Ключ для авторизации в REST API (auth-key) можно получить по ссылке:<div style=\"background:#eee;border:1px solid #ccc;padding:5px 10px;\">%host%/pm/%project%/api/key</div>",
    "issues-backlog" => "Используйте контекстное меню для выполнения действий над элементами бэклога. Для выполнения массовых операций отметьте необходимые строки галочками и выберите действие из списка сверху.",
    "issues-backlog:ticket" => "Как <strong>заявки</strong> попадают в бэклог:</p><ul><li>регистрируются в проекте вручную, например, после <strong>звонка по телефону</strong>;</li>	<li>создаются внешними <strong>пользователями</strong> через <a href=\"%host%/servicedesk\" target=\"_blank\">портал поддержки</a>;</li>	<li><strong>на основе писем</strong>, отправленных пользователями, для этого настройте: %module:support/mailboxes%.</li></ul><p>Обсуждение по заявкам дублируется <strong>почтовыми уведомлениями</strong> авторам заявок. Чтобы передать заявку <strong>в разработку</strong> выберите операцию \"<strong>Реализовать в проекте</strong>\", разработчики будут работать над реализацией, а вы сможете <strong>видеть статус</strong> через связанные пожелания.</p><p>Вы можете редактировать <a href=\"%host%/admin/module/support/customers\" target=\"_blank\">список заказчиков</a> и объединять их в <a href=\"%host%/admin/module/support/clients\" target=\"_blank\">компании</a>, чтобы позволять видеть заявки коллег и разграничивать доступ к проектам поддержки.</p><p>Заказчики могут выбирать к какому продукту оставить свою заявку. Количество проектов поддержки (продуктов) не ограничено. Чтобы организовать поддержку нескольких продуктов в одном проекте, настройте справочник %module:features-list%.",
    "issues-backlog:incidents" => "<strong>Инциденты</strong> попадают в баклог <strong>автоматически</strong> из:</p><ul><li>клиентских и серверных приложений, при помощи обработчиков <strong>ошибок</strong> и перехватчиков <strong>исключений</strong>, подробнее см. %module:project-knowledgebase%;</li>	<li>сервисов <strong>мониторинга</strong>, на основе <strong>уведомлений</strong>, отправляемых по почте или напрямую: %module:incidents/settings%;</li>	<li>из <strong>произвольных</strong> источников, например, сборщиков, сервисов развертывания и т.п., подробнее см. %module:project-knowledgebase%.</li></ul><p>Чтобы отделить <strong>важные</strong> инциденты от второстепенных используйте автоматические действия, которые позволяют на <strong>основе правил</strong> задать приоритет, уточнить источник или окружение: %module:autoactions%.",
    "issues-trace" => "В процессе работы над проектом вы создаете множество различных <strong>артефактов</strong>, связывать которые друг с другом помогает Devprom.</p><p><strong>Матрица трассировки</strong> позволяет контролировать целостность, полноту, сроки реализации пожеланий пользователей и дает ответы на следующие вопросы:<ul>	<li>откуда появилось требование, какая у него важность и кто источник;</li>	<li>все ли необходимые требования запланированы в работу;</li>	<li>в какой версии и когда будут реализованы системные требования;</li>	<li>какова фактическая трудоемкость реализации системных требований;</li>	<li>как проверяются требования тестировщиками;</li>	<li>каким образом документируются требования.</li></ul>",
    "features-list" => "Используйте контекстное меню для выполнения действий над строками списка. Для выполнения массовых операций отметьте необходимые строки галочками и выберите действие из списка сверху.",
    "features-trace" => "В процессе работы над проектом вы создаете множество различных <strong>артефактов</strong>, связывать которые друг с другом помогает Devprom.</p><p><strong>Матрица трассировки</strong> позволяет контролировать целостность, полноту, сроки реализации функций (или фичей продукта) и дает ответы на следующие вопросы:<ul>	<li>все ли необходимые функции запланированы в работу;</li>	<li>в какой версии и когда будут реализованы функции;</li>	<li>каким образом запланирована реализация функций в требованиях;</li>	<li>как проверяются функции тестировщиками;</li>	<li>каким образом документируются функции;</li>	<li>какова фактическая трудоемкость реализации функций продукта.</li></ul>",
    "dicts-featuretype" => "Уровни функций позволяют задать правила описания функциональной архитектуры. Таким образом, параметры функций (даты начала, дата завершения и др.) определяются соответствующими параметрами вложенных функций. То есть вы можете контролировать работу над реализацией функциональности на разных уровнях детализации.",
    "snapshots-reqs" => "<strong>Версия документа</strong> - это неизменяемая копия документа, которую можно создать по результатам <strong>согласования</strong>, либо перед итерацией с целью фиксации скоупа на итерацию. Devprom сохраняет все изменения над требованиями и позволяет сравнивать разные версии документа. В любое время можно посмотреть <strong>журнал изменений</strong> конкретного требования, а также <strong>откатиться</strong> к предыдущему состоянию требования.</p><p><strong>Бейзлайн</strong> в Devprom - это согласованный набор документов требований, тест-планов и технической документации. Обычно бейзлайны соответствуют релизам (иногда итерациям) продукта. Документ, включенный в бейзлайн, можно редактировать. Один документ может быть включен в любое количество бейзлайнов. Таким образом, при помощи бейзлайнов можно разрабатывать одновременно <strong>несколько версий документа</strong>. Документы разных бейзлайнов можно <strong>сравнивать</strong> между собой.",
    "testing/docs" => "<strong>Тест-планы</strong> объединяют тестовые сценарии по <strong>видам тестирования</strong> (функциональное, стресс-тестирование и т.п.), по <strong>назначению</strong> (регрессионное, смоук) и позволяют выполнять тестирование очередной итерации или релиза продукта.&nbsp;Один тестовый сценарий может быть включен&nbsp;в <strong>несколько</strong> тест-планов.</p><p>Для начала <strong>импортируйте</strong> ваши тестовые планы и спецификации.",
    "testing/list" => "<strong>Список&nbsp;</strong>позволяет работать с <strong>тестовыми сценариями</strong> вне зависимости от их расположения в различных тест-планах. <strong>Группируйте</strong> сценарии по типам, тэгам, состояниям и другим атрибутам. Выполняйте <strong>массовые операции</strong> сразу над несколькими сценариями.</p><p>Используйте список сценариев как <strong>матрицу трассировки</strong> для получения ответов на вопросы:<ul>	<li>насколько качественно разработан тестовый сценарий на основе исходного требования;</li>	<li>все ли тестовые сценарии покрывают требования;</li>	<li>все ли изменения в требованиях учтены в тестовых сценариях.</li></ul>",
    "testing/templates" => "<strong>Шаблоны </strong>позволяют сократить время на разработку <strong>тестовых сценариев</strong>, обмениваться знаниями внутри команды, <strong>повысить качество</strong> разрабатываемой тестовой документации и <strong>стандартизовать</strong> тестовую документацию в проекте или по всей компании.<br />Укажите шаблон <strong>по умолчанию</strong>, тогда он будет использоваться при создании тестового сценария.",
    "dicts-environment" => "Справочник <strong>окружений</strong> позволяет составить перечень окружений, на которых производится тестирование, например, сервер разработки (Dev), сервер приемочного тестирования (UAT) или боевой (PROD). В описании окружения укажите все <strong>значимые</strong> его особенности: версии ОС, промежуточного ПО, баз данных и т.п.</p><p>Окружение указывается при <strong>выполнении теста</strong>, помогая разработчикам определить <strong>контекст</strong>, в котором работало приложение и перейти к воспроизведению дефектов.",
    "helpdocs/docs" => "<strong>Техническая документация</strong> предназначена для пользователей, эксплуатирующего персонала, заказчиков и других заинтересованных лиц. Это могут быть&nbsp;руководство пользователя, рабочие инструкции, руководство администратора и др.&nbsp;Отдельным видом технической документации являются встроенные в приложение&nbsp;<strong>помощь</strong>, <strong>контекстная справка</strong> и другие текстовые <strong>ресурсы приложения</strong>.</p><p>Для начала <strong>импортируйте</strong> ваши существующие документы и тексты. Затем вы сможете выгружать&nbsp;технические документы в <strong>различные форматы</strong>.",
    "helpdocs/list" => "<strong>Список&nbsp;</strong>позволяет работать с разделами технических документов вне зависимости от их расположения в документах. <strong>Группируйте</strong> разделы по типам, тэгам, состояниям и другим атрибутам. Выполняйте <strong>массовые операции</strong> сразу над несколькими разделами технической документации.",
    "issues-board" => "Переименуйте столбцы, добавьте новые <strong>состояния</strong> или удалите лишние, при помощи меню, расположенного рядом с названием столбца.<ul><li>При помощи мыши <strong>перемещайте</strong> карточки между состояниями (столбцами).</li>	<li>Укажите наиболее подходящую группировку карточек в настройках фильтра.</li>	<li>Для редактирования атрибутов пожелания <strong>дважды кликните</strong> мышью на карточке.</li>	<li>Дополнительные действия доступны из <strong>контекстного меню</strong> на карточке.</li>	<li>Укажите <strong>цветовую схему</strong>, на основе которой будут окрашиваться карточки.</li></ul>",
    "tasks-board" => "Переименуйте столбцы, добавьте новые <strong>состояния</strong> или удалите лишние, при помощи меню, расположенного рядом с названием столбца.<ul><li>При помощи мыши <strong>перемещайте</strong> карточки между состояниями (столбцами).</li>	<li>Укажите наиболее подходящую группировку карточек в настройках фильтра.</li>	<li>Для редактирования атрибутов задачи <strong>дважды кликните</strong> мышью на карточке.</li>	<li>Дополнительные действия доступны из <strong>контекстного меню</strong> на карточке.</li>	<li>Укажите <strong>цветовую схему</strong>, на основе которой будут окрашиваться карточки задач.</li></ul>",
    "requestform" => "Вы можете спрятать лишние или добавить недостающие поля, указать обязательность или перенести важные поля на первую вкладку в <a href=\"%form:state-url%\">настройках состояния</a>,&nbsp;при помощи настроек полей формы.",
    "project-spenttime" => "В данном отчете подсчитывается <strong>количество часов</strong>, потраченных на каждый день работы в течение заданного месяца. Включите опцию \"Отображать задачи\", если вам необходимо видеть на какие задачи было потрачено время. Вы можете выгрузить данный отчет в <strong>Excel</strong> для передачи заказчику.</p><p>Используйте соответствующий уровень детализации информации о списанном времени: на уровне <strong>участника</strong>, на уровне <strong>проектов</strong>, <strong>пожеланий или задач</strong>. Для этого выберите соответствующее значение из выпадающего списка \"Вид\". В настройках группировки вы можете указать вариант группировки строк: по сотрудникам, по проектам.</p><p>При помощи фильтров вы можете фильтровать список участников, например, путем указания группы проектов, группы пользователей, ролей или конкретного участника.",
    "resourceusage" => "Для эффективного анализа текущей загрузки участников проектов, контроля за превышением планового (оплачиваемого) времени работы сотрудников и планирования потребностей компании в специалистах определенного профиля вы можете использовать функциональность анализа <strong>загрузки сотрудников задачами</strong>.</p><p>В ячейке таблицы отображается суммарное количество часов:</p><ul>	<li>выделенных на проект (из расчета ежедневной загрузки участников и длительности релизов, а при отсутствии планирования по релизам - длительности проекта)</li>	<li>запланированных в задачах</li>	<li>списанных на задачи</li></ul><hr /><p>Доступны следующие варианты построения таблицы загрузки сотрудников:</p><ul>	<li><strong>По пользователям</strong> - отображается загрузка всех сотрудников, с учетом всех проектов, в которых они участвуют. При помощи этого представления вы можете отследить перегруженных сотрудников, а также планировать выделение в свои проекты конкретных специалистов.</li></ul><ul>	<li><strong>По ролям</strong> - отображается загрузка ресурсов, сгруппированных по ролям, в которых они принимают участие в проектах. При помощи этого представления вы можете оценить нехватку специалистов определенного профиля, а также планирование выделение в свои проекты специалистов определенного профиля.</li></ul><ul>	<li><strong>По проектам</strong> - отображается загрузка ресурсов, сгруппированных по проектам, в которых они принимают участие. При помощи этого представления вы можете оценить степень вовлеченности сотрудников в данном проекте, получить ориентировочные сроки завершения проекта и получить представление о планируемом участии сотрудников в данном проекте.</li></ul><p>Каждый вариант представления может быть детализирован по неделям, месяцам и кварталам, а данные могут быть отфильтрованы по годам и месяцам. В каждой ячейке таблицы отображается процент загрузки участника, роли или проекта относительно продолжительности рабочих дней в данном диапазоне времени. &nbsp;",
    "kanban/requests" => "<ul><li>При помощи мыши <strong>перемещайте</strong> карточки между состояниями (столбцами).</li>	<li>Укажите наиболее подходящую группировку карточек в настройках фильтра.</li>	<li>Для редактирования атрибутов пожелания <strong>дважды кликните</strong> мышью на карточке.</li>	<li>Дополнительные действия доступны из <strong>контекстного меню</strong> на карточке.</li>	<li>Укажите <strong>цветовую схему</strong>, на основе которой будут окрашиваться карточки.</li></ul>Переименуйте столбцы, добавьте новые <strong>состояния</strong> или удалите лишние, при помощи меню, расположенного рядом с названием столбца.",
    "tasks-trace" => "<strong>Трассировка</strong> позволяет проконтролировать, что по всем задачам подготовлены необходимые <strong>артефакты</strong>, например, требования, тестовая и техническая документация, есть связи с исходным кодом.",
    "dicts-requesttemplate" => "<strong>Шаблоны пожеланий</strong> или заявок позволяют экономить время при регистрации типовых запросов от пользователей. Создайте пожелание, заполните заголовок и описание, укажите тип и приоритет. На форме просмотра пожелания выберите действие \"<strong>Сохранить как шаблон</strong>\".",
    "taskform" => "Вы можете спрятать лишние или добавить недостающие поля, указать обязательность или перенести важные поля на первую вкладку в <a href=\"%form:state-url%\">настройках состояния</a>,&nbsp;при помощи настроек полей формы.",
    "autoactionform" => "Задайте <strong>условия</strong>, при выполнении которых, система автоматически присвоит <strong>выбранные значения</strong> атрибутов вновь созданным <strong>пожеланиям</strong>. Для редактирования списка действий откройте отчет: %module:autoactions%",
    "dicts-templatehtml" => "Шаблоны выгрузки документации в <strong>HTML</strong> позволяют настроить стилистическое оформление разделов документов, добавить колонтитулы, логотипы и другие изображения. Шаблоный выгрузки в HTML также используются при экспорте документации в формате <strong>CHM</strong> для подготовки модулей помощи Windows.",
    "autoactions" => "<strong>Автоматические действия</strong> над пожеланиями позволяют описать правила задания <strong>значений атрибутов</strong>: приоритета, исполнителя и др., в зависимости от <strong>условий</strong>, которым должно удовлетворять пожелание. Например, если в заголовке или описании пожелания содержатся определенные <strong>ключевые слова</strong>.",
    "permissions/participants" => "Список участников проекта позволяет определить кому из пользователей можно заходить в проект, в какой <strong>роли</strong> и с какими <strong>правами доступа</strong>, а также отобразить контактную информацию и настроить параметры почтовой нотификации.</p><p>Участнику может быть назначено <strong>несколько</strong> ролей в проекте. Роли назначает <strong>координатор проекта</strong>, либо <strong>администратор</strong> при помощи действия \"Включить в проект\" в списке пользователей в административном разделе.</p><p>Если разделение пользователей по ролям и разграничение&nbsp;прав доступа <strong>не требуется</strong>, просто <strong>отключите плагин</strong> \"Разграничение прав доступа к проектам на основе ролей\" в административном разделе. После этого все пользователи смогут работать во всех&nbsp;проектах.",
    "project-question" => "Задавайте <strong>вопросы</strong>, чтобы обсудить важные детали по проекту или обозначить проблему. <strong>Обсуждения</strong> в проекте - это аналог <strong>форумов</strong>, в которых может принять участие каждый участник проекта. Вопросы могут быть назначены <strong>ответственному</strong>, которому поручается разрешить данный вопрос.</p><p>По результатам обсуждения, уточнения и принятых решений, можно <strong>создать пожелание</strong> на основе вопроса. Devprom сохраняет связь между пожеланиями и исходными вопросами, позволяя тем самым отследить источник пожеланий.",
    "project-log" => "Все изменения по проекту отображаются в <strong>журнале активностей</strong>, с указанием даты, автора, измененного объекта и краткого содержания изменения. Используйте фильтры по <strong>типам активности</strong> (создание, изменение, обсуждение и т.п.) и по <strong>типам сущностей</strong>, чтобы выделить в журнале только те изменения, которые для вас важны.",
    "navigation-settings" => "<b>Форма настройка навигации</b>. При помощи этой формы вы можете настроить навигацию в проекте удобным для вас образом. Выберите раздел <strong>горизонтального меню</strong>, например, \"Избранное\" или \"Управление проектом\" и настройте его вертикальное меню. Вы можете изменить порядок пунктов меню, удалить существующие пункты, перетащить отчеты и модули из правой секции, переименовать или добавить группы.",
    "tasksplanbyfact" => "На графике отображаются завершенные задачи, с указанием <strong>отклонения</strong> фактических трудозатрат от плановой трудоемкости по задаче. Чтобы перейти к описанию задачи <strong>кликните мышью</strong> на интересующий вас столбец. Используйте фильтры для анализа отклонений по конкретным <strong>типам задач</strong> или <strong>исполнителям</strong>.",
    "sourcecontrol/revision" => "Чтобы посмотреть последние <strong>коммиты</strong> кода по проекту, подключите репозиторий: %module:sourcecontrol/connection%. Вы можете подключить любое число репозиториев или бранчей.&nbsp;Новые коммиты появляются в списке <strong>периодически</strong>, но вы можете загрузить их вручную, нажав кнопку \"Обновить\". По каждому коммиту можно посмотреть перечень изменившихся <strong>файлов</strong>, а также увидеть сами <strong>изменения</strong>.</p><hr /><p>Чтобы<strong> автоматически связать</strong> изменения в коде с задачей или пожеланием, просто напишите такой текст в описании коммита,&nbsp;где в начале идет UID задачи (T-xxx)&nbsp;или пожелания (I-xxx):</p><div style=\"background:#eee;border:1px solid #ccc;padding:5px 10px;\">I-123</div><p>Чтобы&nbsp;<strong>добавить комментарий</strong> к пожеланию или задаче:</p><div style=\"background:#eee;border:1px solid #ccc;padding:5px 10px;\">I-123 #comment этот текст будет добавлен как комментарий</div><p>Так можно <strong>завершить</strong> пожелание или задачу:</p><div style=\"background:#eee;border:1px solid #ccc;padding:5px 10px;\">I-123 #resolve #comment результат решения пожелания</div><p>Или только&nbsp;<strong>списать время</strong>:<div style=\"background:#eee;border:1px solid #ccc;padding:5px 10px;\">I-123 #time 5(d|h|m|s) #comment это комментарий к списанному времени</div>",
    "codeproductivity" => "На графике отображается <strong>продуктивность</strong> разработчиков, выраженная в виде отношения числа измененных строк кода (LOC) ко времени, затраченному в течение рабочего дня. Используйте отчет для <strong>сравнения</strong> продуктивности разработчиков, <strong>анализа тренда</strong>, для вычисления <strong>затрат</strong> на создание&nbsp;исходного кода.</p><p>Предварительно необходимо <strong>сопоставить имена</strong>&nbsp;учетных&nbsp;записей&nbsp;авторов коммитов&nbsp;с учетными&nbsp;записями&nbsp;приложения. Это можно сделать в настройках подключения к репозиторию, в поле \"Учетные записи\".",
    "sourcecontrol/files" => "Здесь отображается <strong>структура</strong> выбранного репозитория (для переключения репозитория используйте фильтр \"Подключение\"). Вы можете переходить по каталогам и <strong>открывать файлы</strong>. Для быстрого погружения в нужный каталог укажите Путь.",
    "sourcecontrol/connection" => "Вы можете подключить неограниченное количество внешних <strong>репозиториев</strong>: Git, Subversion, TFS.",
    "projectlinkform" => "Обычно <strong>проектные артефакты</strong> доступны внутри своего проекта. Иногда нужно дать возможность <strong>использовать данные</strong> одного проекта в другом, не прибегая к копированию. Например, распространить общие требования программы в подпроектах или задать общий график релизов для всех подпроектов программы и т.п.</p><p>Вы можете сами решить какие данные должны стать доступны в программе или подпроекте, для этого <strong>укажите видимость</strong> для основных типов проектных артефактов.",
    "testdoclineschanged" => "На графике отображается количество добавленных,&nbsp;измененных и удаленных <strong>строк тестовой документации</strong>&nbsp;за каждый день проекта. Используйте отчет для анализа <strong>объема изменений</strong> в тестовой документации, для выявления моментов разработки тестовой документации,&nbsp;для сравнения продуктивности тест-дизайнеров.",
    "testexecutionformlist" => "Переключайтесь <strong>между сценариями</strong> при помощи кнопок с номерами&nbsp;сценариев. Полученные в процессе тестирования результаты заносите сразу в <strong>текст сценария</strong>, включая скриншоты. Прикрепляйте к тесту логи, дампы и другие вспомогательные файлы.</p><p>Если со сценарием связано&nbsp;<strong>исходное пожелание</strong> (доработка или история пользователя), то в случае провала теста просто <strong>верните пожелание разработчику</strong> (отклоните) при помощи кнопок или выпадающего меню, расположенных рядом с пожеланием.</p><p>В случае, когда исходное пожелание для сценария не задано, зарегистрируйте <strong>новую&nbsp;ошибку</strong>.",
    "attachments" => "Используйте этот модуль для просмотра и поиска&nbsp;<strong>приложений</strong>, прикрепленных к <strong>проектным артефактам</strong> и их комментариям.",
    "integration/list" => "Вы можете настроить <strong>интеграцию</strong> Devprom с другими трекерами, чтобы один раз <strong>перенести</strong> ваши данные в Devprom или периодически <strong>синхронизировать</strong> данные проектов&nbsp;между двумя системами. Перенос данных из одной системы в другую осуществляется на основе настроек <strong>мэппинга</strong>. Мы подготовили типовые настройки, которые вы можете изменить под себя.</p><p>&nbsp;</p><p>Для программной регистрации в проекте ошибок или инцидентов используйте следующую команду:</p><div style=\"background:#eee;border:1px solid #ccc;padding:5px 10px;\"><p>curl -X POST -H \"Content-Type:application/json\" http://api.devopsboard.com/1/errors -d \"{\\\"caption\\\":\\\"Bug\\\",\\\"stacktrace\\\":\\\"...\\\",\\\"source\\\":\\\"myApp\\\",\\\"project\\\":\\\"%project-key%\\\"}\"</p></div><p>Больше возможностей вы найдете в <a href=\"http://devopsboard.com/ru/docs\" target=\"_blank\">документации</a>.&nbsp;",
    "testing/results" => "В списке <strong>результатов тестирования</strong> (тест-ранов) отображаются все тесты, которые были запущены на выполнение, с указанием окружения, на котором выполнялось тестирование, версии приложения, обнаруженных ошибок, тестировщике и результате тестирования.</p><p>Вы можете <strong>тестировать</strong>&nbsp;пожелания, отдельные тестовые сценарии, набор сценариев или <strong>тест-планы</strong>.&nbsp;Детальный <strong>вид</strong> позволяет увидеть результаты тестирования по всем сценариям теста.</p><p>Импортируйте отчеты от средств <strong>автоматического тестирования</strong>, при помощи команды:<div style=\"background:#eee;border:1px solid #ccc;padding:5px 10px;\">curl -X POST -H \"Devprom-Auth-Key: &lt;auth-key&gt;\"&nbsp;&nbsp;--data-binary&nbsp;@testng-results.xml \"%server-url%/pm/%project%/module/testing/convert?version=&lt;номер-сборки&gt;&amp;environment=&lt;название-окружения&gt;\"</div>",
    "testreportimportform" => "Добавляйте отчеты по тестированию <strong>автоматически</strong>. Настройте дополнительный шаг вашего инструмента непрерывного <strong>выпуска сборок</strong>. После запуска автоматических тестов импортируйте отчет следующей командой:<div style=\"background:#eee;border:1px solid #ccc;padding:5px 10px;\">curl -X POST -H \"Devprom-Auth-Key: &lt;auth-key&gt;\"&nbsp;--data-binary&nbsp;@testng-results.xml \"%server-url%/pm/%project%/module/testing/convert?version=&lt;номер-сборки&gt;&amp;environment=&lt;название-окружения&gt;\"</div>",
    "portfolioform" => "<strong>Портфели</strong> позволяют объединить различные активности&nbsp;вокруг продукта, клиента, цели или по другим критериям, чтобы контролировать ход работ на одном экране, на общей доске,&nbsp;быстро передавать требования или задачи из одного проекта в другой, создавать связанные задачи, просматривать кросс-проектные отчеты."
);